{"version":3,"sources":["components/navbar.js","pages/timeline/timeline.js","data/tabledata.js","App.js","reportWebVitals.js","index.js"],"names":["SubMenu","Menu","Sider","Layout","Navbar","props","console","log","current","state","theme","isOpen","defaultOpenArray","this","className","id","mode","defaultSelectedKeys","defaultOpenKeys","selectedKeys","Item","icon","CalendarOutlined","to","BranchesOutlined","title","React","Component","Content","Timeline","collapsed","toggleCollapsed","setState","span","style","padding","margin","minHeight","background","plugins","gfm","children","allowDangerousHtml","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAMQA,EAAYC,IAAZD,QACFE,EAAQC,IAEOC,E,kDACjB,WAAYC,GAAQ,IAAD,6BACf,cAAMA,GACNC,QAAQC,IAAI,EAAKF,MAAMG,SACvB,EAAKC,MAAQ,CACTC,MAAO,OACPC,QAAO,GALI,E,qDASf,IACIC,EAAmB,GAGvB,OADQA,EAHOC,KAAKR,MAAMM,OAGC,CAAC,QAA2B,GAE/C,cAACT,EAAD,CAAQY,UAAU,yBAAyBC,GAAG,WAA9C,SACI,eAAC,IAAD,CACIC,KAAK,SAELC,oBAAqB,CAAC,QACtBC,gBAAiBN,EACjBO,aAAc,CAACN,KAAKR,MAAMG,SAC1BE,MAAM,OACNK,GAAG,aAPP,UAUA,cAAC,IAAKK,KAAN,CAA0BC,KAAM,cAACC,EAAA,EAAD,IAAhC,SACI,cAAC,IAAD,CAAMC,GAAG,YAAT,mCADW,YAIf,eAACvB,EAAD,CAAkBqB,KAAM,cAACG,EAAA,EAAD,IAAsBC,MAAM,YAApD,UACI,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAMG,GAAG,UAAT,8BADW,UAGf,cAAC,IAAKH,KAAN,UACI,cAAC,IAAD,CAAMG,GAAG,YAAT,+BADW,cAJN,MASb,eAACvB,EAAD,CAAkBqB,KAAM,cAACG,EAAA,EAAD,IAAsBC,MAAM,oBAApD,UACI,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAMG,GAAG,YAAT,+BADW,YAGf,cAAC,IAAKH,KAAN,UACI,cAAC,IAAD,CAAMG,GAAG,eAAT,2CADW,eAGf,cAAC,IAAKH,KAAN,UACI,cAAC,IAAD,CAAMG,GAAG,QAAT,2BADW,UAPN,MAYb,cAACvB,EAAD,CAAsBqB,KAAM,cAACG,EAAA,EAAD,IAAsBC,MAAM,SAAxD,SACI,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAMG,GAAG,aAAT,gCADW,cADN,mB,GAnDGG,IAAMC,W,6CCClCC,EAAYzB,IAAZyB,QAEaC,E,kDACnB,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAORI,MAAQ,CACNqB,WAAW,GATM,EAYnBC,gBAAkB,WAChB,EAAKC,SAAS,CACZF,WAAY,EAAKrB,MAAMqB,aAZzB,EAAKrB,MAAQ,CACXC,MAAO,OACPF,QAAS,YAJM,E,qDAmBf,OACE,8BACE,cAAC,IAAD,UAEE,cAAC,IAAD,UAEA,eAAC,IAAD,WAEE,eAAC,IAAD,CAAKyB,KAAM,EAAX,cAAe,cAAC,EAAD,CAAQzB,QAAQ,aAA/B,OAEA,cAAC,IAAD,CAAKyB,KAAM,GAAX,SACE,cAAC,IAAD,CAAQC,MAAO,CAAEC,QAAS,cAAeC,OAAQ,UAAjD,SAEE,cAACR,EAAD,CAASM,MAAO,CAAEC,QAAS,GAAIC,OAAQ,EAAGC,UAAU,IAAKC,WAAY,QAArE,SAEG,cAAC,IAAD,CAAuBC,QAAS,CAACC,KAAMC,SC/C9C,09BD+CkEC,oBAAkB,uB,GAnC5Df,aENjBgB,E,uKAEb,OAEI,aADA,CACC,IAAD,UACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWhB,EAAUiB,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWhB,a,GARlBF,aCMlBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c49770cd.chunk.js","sourcesContent":["import React  from \"react\";\nimport \"./navbar.css\";\nimport 'antd/dist/antd.min.css';\nimport { Layout, Menu} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { HomeOutlined, BranchesOutlined, CalendarOutlined} from '@ant-design/icons';\nconst { SubMenu } = Menu;\nconst Sider = Layout;//使用定义\n\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props.current);\n        this.state = {\n            theme: \"dark\",\n            isOpen:false\n        };\n    }\n    render() {\n        const isOpen = this.props.isOpen\n        let defaultOpenArray = []\n\n        isOpen? defaultOpenArray = ['sub1']:defaultOpenArray = [];\n        return(\n                <Sider  className=\"site-layout-background\" id=\"siderNav\">\n                    <Menu\n                        mode=\"inline\" //导航栏列出来显示\n                        // mode=\"horizontal\"  //导航栏隐藏起来显示\n                        defaultSelectedKeys={['home']}\n                        defaultOpenKeys={defaultOpenArray}\n                        selectedKeys={[this.props.current]}\n                        theme=\"dark\"\n                        id=\"navBarMenu\"\n                    >\n\n                    <Menu.Item key=\"timeline\" icon={<CalendarOutlined />}>\n                        <Link to=\"/timeline\">Layer 2 Introduction</Link>\n                    </Menu.Item>\n\n                    <SubMenu key=\"zk\" icon={<BranchesOutlined />} title=\"Zk Rollup\">\n                        <Menu.Item key=\"zksync\">\n                            <Link to=\"/zksync\">Zk Sync(Coming)</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"loopring\">\n                            <Link to=\"/loopring\">Loopring(Coming)</Link>\n                        </Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"op\" icon={<BranchesOutlined />} title=\"Optimistic Rollup\">\n                        <Menu.Item key=\"optimism\">\n                            <Link to=\"/optimism\">Optimism(Coming)</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"offchainlab\">\n                            <Link to=\"/offchainlab\">OffchainLab/Arbitrum(Coming)</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"fuel\">\n                            <Link to=\"/fuel\">Fuel(Coming)</Link>\n                        </Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"others\" icon={<BranchesOutlined />} title=\"Others\">\n                        <Menu.Item key=\"starkware\">\n                            <Link to=\"/starkware\">StarkWare(Coming)</Link>\n                        </Menu.Item>\n                    </SubMenu>\n\n                </Menu>\n            </Sider>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col } from 'antd';\nimport ReactMarkdown from 'react-markdown'\nimport  Navbar  from \"../../components/navbar.js\";\nimport \"./timeline.css\";\nimport gfm from 'remark-gfm';\nimport { Layout } from 'antd';\nimport markdown from \"../../data/tabledata.js\";\nimport ReactMarkdownWithHtml from \"react-markdown/with-html\";\n\nconst { Content } = Layout;\n\nexport default class Timeline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"dark\",\n      current: \"timeline\"\n    };\n  }\n\n  state = {\n    collapsed: false,\n  };\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n      return(\n        <div>\n          <Layout>\n            {/*引入头部 */}\n            <Layout>\n            {/*引入下半部分，通过Col控制左右部分的占比 */}\n            <Row>\n              {/*引入导航栏 */}\n              <Col span={4}> <Navbar current='timeline' /> </Col>\n              {/*特别的，在有下拉的菜单中（写在实验管理下面的资源管理和权限管理的主页中）我们需要加一个isOpen的判断菜单是否展开，详见下方navbar.jsx文件，<Col span={4}> <Navbar current=\"aExperiment\" isOpen=\"true\"/> </Col>*/}\n              <Col span={20}>\n                <Layout style={{ padding: '0 24px 24px', margin: '23px 0' }}>\n                  {/*引入右半部分 */}\n                  <Content style={{ padding: 24, margin: 0, minHeight:580, background: '#fff' }}>\n                     {/*右半部分封装成组件直接引入，默认是一块如效果图的空白区域 */}\n                     <ReactMarkdownWithHtml plugins={[gfm]} children={markdown} allowDangerousHtml />\n                  </Content>\n                </Layout>\n              </Col>\n            </Row>\n          </Layout>\n          </Layout>\n        </div>\n      );\n  }\n}\n","const markdown =`\n\n## Ethereum L2 Timeline Table\n\n\n| Team/Project    | when to testnet   | when to mainnet  | 3rd party development supportted|  Virtual Machine/Lanuage  |\n| ----------------|:-----------------|:-----------------|:-----------------:|:----------------:|\n| [Optimism](https://optimism.io/)    | [Done](https://medium.com/ethereum-optimism/light-at-the-end-of-the-tunnel-c390a05bbcb8) but limited <br/> Public Testnet — Late February/Early March|   Soon after Public testnet|YES  | OVM(EVM) |\n| [OffchainLab/Arbitrum](https://offchainlabs.com/) | [Done](https://medium.com/offchainlabs/arbitrum-rollup-testnet-full-featured-and-open-to-all-da3255b562ea) | Mar 2021 | YES|AVM(EVM) |\n| [Matter Lab/Zksync](https://matter-labs.io/)      | Done | Done | YES, but not yet | [Zinc VM](https://zinc.zksync.io/)|\n| [Loopring](https://loopring.io/#/)   | Done | Done| NO | N/A|\n| [StarkWare/StarkEx](https://starkware.co/)  | N/A | N/A |YES|[Cario](https://starkware.co/cairo/)|\n`\n\nexport default markdown;\n","import React, { Component } from 'react'\nimport { HashRouter,Route,Switch} from 'react-router-dom'\n\n// import Home from './pages/home/home'\nimport Timeline from './pages/timeline/timeline'\n\nexport default class App extends Component {\n    render() {\n        return (\n            /**路由跳转 */\n            <HashRouter>\n                <Switch>\n                    {/* 加exact使得一进'/'地址就加载home界面 */}\n                    <Route path='/' component={Timeline} exact />\n                    <Route path='/home' component={Timeline}/>\n                    {/* path:网页路由  component:jsx文件中class名（首字母大写） */\n                    // <Route path=\"/class\" component={Class} />\n                    // <Route path=\"/docker\" component={Docker} />\n                    // <Route path=\"/sExperiment\" component={SExperiment} />\n                    // <Route path=\"/aExperiment\" component={AExperiment} />\n                    // <Route path=\"/feedback\" component={Feedback} />\n                    }\n                </Switch>\n            </HashRouter>\n        )\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}